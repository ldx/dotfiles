#!/bin/bash

setxkbmap \
    -rules evdev \
    -model pc105 \
    -layout hu \
    -option
#    -option lv3:alt_switch -option terminate:ctrl_alt_bksp \
#    -option altwin:swap_lalt_lwin -option altwin:alt_super_win

if [ -f "$HOME/.layout.xkb" ]; then
    xkbcomp $HOME/.layout.xkb $DISPLAY
fi

xset b off

if type "synclient" > /dev/null 2>&1; then
    synclient TapButton1=1
    synclient TapButton2=3
    synclient TapButton3=2
    synclient VertTwoFingerScroll=1
    synclient LockedDrags=1
    synclient LockedDragTimeout=500
    synclient PalmDetect=1
fi

if [ -f "$HOME/.Xdefaults" ]; then
    xrdb $HOME/.Xdefaults
fi

CONNECTED_DISPLAYS=$(xrandr|grep '\bconnected\b'|awk '{print $1}'|grep -v -E '\beDP[0-9]*\b')
DISCONNECTED_DISPLAYS=$(xrandr|grep '\bdisconnected\b'|awk '{print $1}'|grep -v -E '\beDP[0-9]*\b')
INTERNAL_DISPLAY=$(xrandr|grep -E '\beDP[0-9]*\b'|awk '{print $1}')
N_DISPLAYS=$(echo $CONNECTED_DISPLAYS|wc -w)
echo "CONNECTED_DISPLAYS $CONNECTED_DISPLAYS"
echo "DISCONNECTED_DISPLAYS $DISCONNECTED_DISPLAYS"
echo "INTERNAL_DISPLAY $INTERNAL_DISPLAY"
echo "N_DISPLAYS $N_DISPLAYS"

if [ $N_DISPLAYS -gt 0 ]; then
    echo "Disabling internal display $INTERNAL_DISPLAY"
    xrandr --output $INTERNAL_DISPLAY --off
    for d in $CONNECTED_DISPLAYS; do
        echo "Enabling display $d xrandr --output $d --auto"
        xrandr --output $d --auto
    done
    for d in $DISCONNECTED_DISPLAYS; do
        echo "Disabling display $d xrandr --output $d --off"
        xrandr --output $d --off
    done
else
    echo "Enabling internal display $INTERNAL_DISPLAY"
    xrandr --output $INTERNAL_DISPLAY --auto
    for d in $DISCONNECTED_DISPLAYS; do
        echo "Disabling display $d xrandr --output $d --off"
        xrandr --output $d --off
    done
fi

for p in $(pidof gnome-screensaver conky trayer skype nm-applet chrome \
           autocutsel parcellite); do
    kill $p
done

if type "xscreensaver" > /dev/null 2>&1; then
    xscreensaver-command -exit
    xscreensaver -no-splash &
fi

type "light-locker" > /dev/null 2>&1 && light-locker &

if type "ssh-agent" > /dev/null 2>&1; then
    echo -n "Checking if ssh-agent is running..."
    if [ -z "$SSH_AUTH_SOCK" ]; then
        echo "no, starting it"
        eval "$(ssh-agent)"
        if type "ssh-askpass" > /dev/null 2>&1; then
            export SSH_ASKPASS=ssh-askpass
            ssh-add < /dev/null
        fi
    else
        echo "yes"
    fi
fi

type "trayer" > /dev/null 2>&1 && trayer --widthtype request --align right \
    --height 32 --transparent true --alpha 0 --tint 0x0B0B0B &

type "skype" > /dev/null 2>&1 && (sleep 3 && PULSE_LATENCY_MSEC=30 skype &)

type "dropbox" > /dev/null 2>&1 && (dropbox stop; dropbox start &)

type "nm-applet" > /dev/null 2>&1 && nm-applet &

type "pasystray" > /dev/null 2>&1 && pidof pasystray || pasystray &

type "devmon" > /dev/null 2>&1 && {
    dmpid="$(ps h -C devmon -o pid)"
    if [ -z "$dmpid" ]; then
        echo "Starting devmon"
        devmon &
    else
        echo -n "devmon running as pid(s): "
        echo $dmpid
    fi
}

type "parcellite" > /dev/null 2>&1 && parcellite &

FIREFOX_CANDIDATES="firefox-esr firefox iceweasel"
for ff in $FIREFOX_CANDIDATES; do
    type "$ff" > /dev/null 2>&1 && {
        ffpid="$(pidof $ff)"
        if [ -z "$ffpid" ]; then
            echo "Starting $ff"
            (sleep 3 && LANG=C LC_ALL=C $ff > /dev/null 2>&1) &
        else
            echo "$ff running as pid $ffpid"
        fi
        break
    }
done


exec xmonad
