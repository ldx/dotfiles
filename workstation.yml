---
- hosts: all
  sudo: yes

  vars:
    homedir: "/home/{{ ansible_env.SUDO_USER }}"

  tasks:
    - name: update /etc/locale.gen
      lineinfile:
        dest: /etc/locale.gen
        line: "{{ item }}"
      with_items:
        - en_US.UTF-8 UTF-8
        - hu_HU.UTF-8 UTF-8

    - name: disable SendEnv in /etc/ssh/ssh_config
      lineinfile:
        dest: /etc/ssh/ssh_config
        regexp: '^\s+SendEnv (.*)$'
        line: '#   SendEnv \1'
        backrefs: yes
      tags:
        - sshconfig

    - name: enable ForwardAgent in /etc/ssh/ssh_config
      lineinfile:
        dest: /etc/ssh/ssh_config
        regexp: '^\s*#?\s*ForwardAgent\s'
        line: 'ForwardAgent yes'
      tags:
        - sshconfig

    - name: generate locals
      command: locale-gen

    - name: change shell to bash
      command: /usr/bin/chsh -s /bin/bash {{ ansible_env.SUDO_USER }}

    - name: remounting existing filesystems with noatime
      mount: src={{item.device}}
             name={{item.mount}}
             fstype={{item.fstype}}
             opts={{item.options}},noatime
             state=present
      when: "{{ item.mount in ['/', '/boot'] and 'noatime' not in item.options }}"
      with_items: "{{ ansible_mounts }}"

    - name: run fstrim daily
      cron: name="run fstrim daily"
            special_time=daily
            job="fstrim /"

    - name: set swappiness
      sysctl: name=vm.swappiness
              value=1
              state=present
              sysctl_file=/etc/sysctl.conf

    - name: add kernel parameters to grub
      lineinfile: dest=/etc/default/grub
                  regexp="^GRUB_CMDLINE_LINUX="
                  line="GRUB_CMDLINE_LINUX=\"cgroup_enable=memory swapaccount=1 elevator=noop\""
      register: grub_cmdline

    - name: run update-grub if /etc/default/grub has changed
      command: update-grub
      when: grub_cmdline | changed

    - name: make backlight sysfs file writable
      copy: dest=/etc/udev/rules.d/97-intel_backlight.rules
            mode=0644
            owner=root
            group=root
            content='KERNEL=="intel_backlight", SUBSYSTEM=="backlight", RUN+="/bin/chmod 0666 /sys/class/backlight/%k/brightness"'

    - name: allow unsigned apt repos
      copy: dest=/etc/apt/apt.conf.d/30allowinsecurerepos
            mode=0644
            owner=root
            group=root
            content='Acquire::AllowInsecureRepositories "yes";'

    - name: look up timedatectl
      set_fact:
        timedatectl_path: "{{ lookup('pipe', 'which timedatectl') }}"

    - name: allow passwordless sudoing for certain commands
      lineinfile:
        dest: /etc/sudoers.d/local-passwordless-commands
        line: "{{ ansible_env.SUDO_USER }} ALL=NOPASSWD: {{ timedatectl_path }}"
        state: present
        create: yes
        validate: 'visudo -cf %s'

    - name: check if vimrc exists
      stat:
        path: "{{ homedir }}/.vimrc"
      register: vimrc

    - name: generate vimrc via vim-bootstrap
      uri:
        url: https://vim-bootstrap.com/generate.vim
        dest: "{{ homedir }}/.vimrc"
        method: POST
        body_format: form-urlencoded
        body:
        - [ editor, vim ]
        - [ langs, c ]
        - [ langs, erlang ]
        - [ langs, go ]
        - [ langs, haskell ]
        - [ langs, python ]
      when: not vimrc.stat.exists
